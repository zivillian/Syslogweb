@page
@using System.Diagnostics
@using SyslogWeb.Models
@using SyslogWeb.Extensions
@model IndexModel
@{
    var sw = new Stopwatch();
    sw.Start();
    ViewData["Title"] = "SyslogWeb";
}
@if (Html.IsDebug())
{
    @section footer
    {
        <div class="accordion" id="accordionExample">
            <div class="card">
                <div class="card-header" id="headingOne">
                    <h3 class="mb-0">
                        <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                            Json Query
                        </button>
                    </h3>
                </div>

                <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordionExample">
                    <div class="card-body">
                        <pre>@Model.QueryJson</pre>
                    </div>
                </div>
            </div>
            <div class="card">
                <div class="card-header" id="headingThree">
                    <h4 class="mb-0">
                        <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                            Stats
                        </button>
                    </h4>
                </div>
                <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordionExample">
                    <div class="card-body">
                        <p>Parse: @Model.ParseTime ms</p>
                        <p>Fetch: @Model.FetchTime ms</p>
                        <p>Render: @sw.ElapsedMilliseconds ms</p>
                        @{ sw.Stop(); }
                    </div>
                </div>
            </div>
        </div>
    }}

<h2>@ViewBag.Title</h2>
<form method="GET" id="searchform" data-id="@Model.ObjectId" data-query="@Model.Query">
    <div class="row">
        <div class="input-group col-md-9">
            <div class="input-group-prepend">
                <button class="btn btn-outline-secondary" type="button" id="pause">
                    <span class="fas fa-pause"></span>
                </button>
            </div>
            <input id="searchinput" class="form-control" placeholder="Suche..." asp-for="@Model.Query" name="q" autocomplete="off" />
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="submit">
                    <span class="fas fa-search"></span>
                </button>
            </div>
        </div>
        <span class="input-group col-md-3 date">
            <input class="form-control" placeholder="max. Datum" asp-for="@Model.Date" name="date" value="@Model.Date?.ToString("O")" type="text" autocomplete="off" />
        </span>
    </div>

</form>
<table class="table table-sm">
    <thead>
        <tr>
            <th scope="col">Datum</th>
            <th scope="col">Host</th>
            <th scope="col">
                <div class="dropdown" id="severityform">
                    <a class="dropdown-toggle" href="#" role="button" id="dropdownSeverity" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Severity
                    </a>
                    <div class="dropdown-menu" aria-labelledby="dropdownSeverity">
                        <div class="px-2">
                            @foreach (var value in Enum.GetValues(typeof(SyslogSeverity)).OfType<SyslogSeverity>().Where(x => x >= 0).OrderBy(x => x))
                            {
                            <div class="form-check">
                                @if (Model.SelectedSeverities.Contains(value))
                                {
                                    <input class="form-check-input" type="checkbox" checked="checked" value="@value.ToString()" id="severity_@value" />
                                }
                                else
                                {
                                    <input class="form-check-input" type="checkbox" value="@value.ToString()" id="severity_@value" />
                                }
                                <label class="form-check-label" for="severity_@value">
                                    @value.ToString()
                                </label>
                            </div>
                            }
                        </div>
                    </div>
                </div>
            </th>
            <th scope="col">
                <div class="dropdown" id="facilityform">
                    <a class="dropdown-toggle" href="#" role="button" id="dropdownFacility" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Facility
                    </a>
                    <div class="dropdown-menu" aria-labelledby="dropdownFacility">
                        <div class="px-2">
                            @foreach (var value in Enum.GetValues(typeof(SyslogFacility)).OfType<SyslogFacility>().OrderBy(x => x.ToString()))
                            {
                                <div class="form-check">
                                    @if (Model.SelectedFacilities.Contains(value))
                                    {
                                        <input class="form-check-input" type="checkbox" checked="checked" value="@value.ToString()" id="facility_@value" />
                                    }
                                    else
                                    {
                                        <input class="form-check-input" type="checkbox" value="@value.ToString()" id="facility_@value" />
                                    }
                                    <label class="form-check-label" for="facility_@value">
                                        @value.ToString()
                                    </label>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </th>
            <th scope="col">Program</th>
            <th scope="col">Text</th>
        </tr>

    </thead>
    <tbody>
        @foreach (var entry in Model.LogEntryModels)
        {
            <tr class="@entry.CssClass">
                <td>@Html.Raw(entry.Date.LocalDateTime.ToString().Replace(" ", "&nbsp;"))</td>
                <td style="white-space: nowrap;">
                    @if (!entry.HostAsLink)
                    {
                        @entry.Host
                    }
                    else
                    {
                        <a asp-route-q="@($"{entry.Query} host:{entry.Host}")" asp-route-date="@(entry.QueryDate.HasValue?entry.QueryDate.ToString():String.Empty)">@entry.Host</a>
                    }
                </td>
                <td>@entry.Severity</td>
                <td>@entry.Facility</td>
                <td>
                    @if (!entry.ProgramAsLink)
                    {
                        @entry.Program
                    }
                    else
                    {
                        <a asp-route-q="@($"{entry.Query} program:{entry.Program}")" asp-route-date="@(entry.QueryDate.HasValue?entry.QueryDate.ToString():String.Empty)">@entry.Program</a>
                    }
                </td>
                <td>@entry.Text</td>
            </tr>
        }
    </tbody>
</table>
@if (Model.MinDate.HasValue)
{
    <a asp-route-q="@Model.Query" asp-route-date="@Model.MinDate?.ToString("O")">Next</a>
}